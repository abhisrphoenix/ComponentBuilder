import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

public class CreateFile {

    public static void main(String[] args) throws IOException {
        
    	
    	//String path = "C:"+File.separator+"hello"+File.separator+"hi.txt";
    	//(use relative path for Unix systems)
    	
    	String path = "C:"+File.separator+"hello"+File.separator+"";
    	File file = null;//new File(path);
    	//(works for both Windows and Linux)
    	/*f.mkdirs(); 
    	f.createNewFile(); */
    	
    	List<String> folderStruct = new ArrayList<String>();
    	folderStruct.add("AutoGen");
    	folderStruct.add("Contract"+File.separator+"In");
    	folderStruct.add("Contract"+File.separator+"Out");
    	folderStruct.add("Contract"+File.separator+"Schema");
    	folderStruct.add("Logic"+File.separator+"Internal"+File.separator+"Indices");
    	folderStruct.add("Logic"+File.separator+"Internal"+File.separator+"Schema");
    	folderStruct.add("Logic"+File.separator+"Internal"+File.separator+"Views");
    	
    	for (String folder : folderStruct) {
			
    		file = new File(path+folder);
    		file.mkdirs();
    		
		}
    	PrintWriter writer = new PrintWriter(path+"Inputs.ecl", "UTF-8");
    	
    	//write input files
    	
    	StringBuffer inputEclBuffer = new StringBuffer().append("\n").append("//Autogenerated Code\n")
    	.append("IMPORT * FROM Framework.MAP3.Contract;\n")
    	.append("EXPORT Inputs := INTERFACE(In.Stream,In.Scalar,Config)\n")
    	.append("END;");
    	writer.println(inputEclBuffer);
    	writer.close();
    	
    	writer = new PrintWriter(path+"Outputs.ecl", "UTF-8");
    	StringBuffer outputsEclBuffer = new StringBuffer().append("\n").append("//Autogenerated Code\n")
    	.append("IMPORT * FROM Framework.MAP3.Contract;")
    	.append("EXPORT Outputs := INTERFACE(out.Stream,out.Scalar,out.ErrorStream,out.Indices)")
    	.append("END;");
    	
    	writer.println(outputsEclBuffer.toString());
    	writer.close();   	
    	
    	
    	
    	
    	
    }
}
